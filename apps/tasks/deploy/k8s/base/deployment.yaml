apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service
  labels:
    app: users-service
    app.kubernetes.io/name: users-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: users-service
    spec:
      serviceAccountName: users-service-sa # อ้างถึง ServiceAccount
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001 # ตรงกับ UID ของ appuser ใน Dockerfile (Alpine)
        runAsGroup: 10001 # ตรงกับ GID ของ appgroup ใน Dockerfile (Alpine)
        fsGroup: 10001 # กำหนด GID สำหรับ Volume mount (ถ้ามี)
      containers:
        - name: users-service
          image: users-service
          imagePullPolicy: Always
          ports:
            - containerPort: 50051
              name: grpc-port
              protocol: TCP
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: users-service-config
                  key: LOG_LEVEL
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          livenessProbe:
            grpc:
              port: 50051
              service: ""
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            grpc:
              port: 50051
              service: ""
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 1
          securityContext: # Container-level security context (overrides pod-level for container)
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
