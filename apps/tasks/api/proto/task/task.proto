syntax = "proto3";

package task;

option go_package = "github.com/pratchaya-maneechot/service-exchange/apps/tasks/api/proto/task";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// Task represents a single task in the system.
message Task {
  string id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// TaskService defines the RPC methods for managing tasks.
service TaskService {
  // CreateTask creates a new task.
  rpc CreateTask(CreateTaskRequest) returns (Task);

  // GetTask retrieves a single task by its ID.
  rpc GetTask(GetTaskRequest) returns (Task);

  // ListTasks retrieves a list of tasks.
  rpc ListTasks(ListTasksRequest) returns (ListTasksResponse);

  // UpdateTask updates an existing task.
  rpc UpdateTask(UpdateTaskRequest) returns (Task);

  // DeleteTask deletes a task by its ID.
  rpc DeleteTask(DeleteTaskRequest) returns (google.protobuf.Empty); // Often returns Empty on successful deletion
}

// Request message for creating a task.
message CreateTaskRequest {
  string name = 1; // Field 1 is more conventional for the primary field
}

// Request message for retrieving a single task.
message GetTaskRequest {
  string id = 1; // The ID of the task to retrieve.
}

// Request message for listing tasks.
// This can be extended with pagination, filters, etc.
message ListTasksRequest {
  // Add fields here for filtering, pagination, etc., if needed.
  // For example:
  // int32 page_size = 1;
  // string page_token = 2;
}

// Response message for listing tasks.
message ListTasksResponse {
  repeated Task tasks = 1; // 'repeated' indicates a list of Task objects.
  // Add fields for pagination tokens if ListTasksRequest has them.
  // For example:
  // string next_page_token = 2;
}

// Request message for updating a task.
message UpdateTaskRequest {
  string id = 1;   // The ID of the task to update.
  string name = 2; // The new name for the task.
  // Typically, only mutable fields are included here.
  // created_at and updated_at are usually managed by the server.
}

// Request message for deleting a task.
message DeleteTaskRequest {
  string id = 1; // The ID of the task to delete.
}