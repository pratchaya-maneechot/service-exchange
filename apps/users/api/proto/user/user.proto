syntax = "proto3";

package user.v1;

option go_package = "github.com/pratchaya-maneechot/service-exchange/apps/users/api/proto/user/v1;userv1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

// UserStatus represents the current status of a user account
enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_INACTIVE = 2;
  USER_STATUS_SUSPENDED = 3;
  USER_STATUS_PENDING_VERIFICATION = 4;
}

// LineRegisterRequest contains the required information to register a new user
message LineRegisterRequest {
  string lineUserId = 1;
  google.protobuf.StringValue email = 2;
  google.protobuf.StringValue password = 3;
  string displayName = 4;
  google.protobuf.StringValue avatarUrl = 5;
}

// UpdateUserProfileRequest contains the fields that can be updated in a user profile
message UpdateUserProfileRequest {
  string userId = 1;
  google.protobuf.StringValue displayName = 2;
  google.protobuf.StringValue firstName = 3;
  google.protobuf.StringValue lastName = 4;
  google.protobuf.StringValue bio = 5;
  google.protobuf.StringValue avatarUrl = 6;
  google.protobuf.StringValue phoneNumber = 7;
  google.protobuf.StringValue address = 8;
  map<string, string> preferences = 9;
}

// LineRegisterResponse contains the result of a successful user registration
message LineRegisterResponse {
  string userId = 1;
}

// GetUserProfileRequest specifies which user profile to retrieve
message GetUserProfileRequest {
  string userId = 1;
}

// UserProfile represents a complete user profile with all associated data
message UserProfile {
  string userId = 1;
  string lineUserId = 2;
  google.protobuf.StringValue email = 3;
  string displayName = 4;
  google.protobuf.StringValue firstName = 5;
  google.protobuf.StringValue lastName = 6;
  google.protobuf.StringValue bio = 7;
  google.protobuf.StringValue avatarUrl = 8;
  google.protobuf.StringValue phoneNumber = 9;
  google.protobuf.StringValue address = 10;
  map<string, string> preferences = 11;
  UserStatus status = 12;
  repeated string roles = 13;
  bool isVerified = 14;
  google.protobuf.Timestamp lastLoginAt = 15;
  google.protobuf.Timestamp createdAt = 16;
}

// UserService provides operations for managing user accounts and profiles
service UserService {
  // LineRegister creates a new user account
  rpc LineRegister(LineRegisterRequest) returns (LineRegisterResponse);
  
  // UpdateUserProfile updates an existing user's profile information
  rpc UpdateUserProfile(UpdateUserProfileRequest) returns (google.protobuf.Empty);

  // GetUserProfile retrieves a user's profile by ID
  rpc GetUserProfile(GetUserProfileRequest) returns (UserProfile);
}